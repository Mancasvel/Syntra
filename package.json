{
  "name": "syntra",
  "version": "1.0.0",
  "description": "Transformamos eventos en experiencias digitales memorables",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\" \"npm run dev:mobile\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev", 
    "dev:mobile": "cd mobile && npm start",
    "dev:all": "docker-compose up -d && npm run dev",
    "install:all": "npm install && npm run install:backend && npm run install:frontend && npm run install:mobile",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "install:mobile": "cd mobile && npm install",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "db:setup": "cd backend && npm run db:migrate && npm run db:seed",
    "db:reset": "cd backend && npm run db:reset",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "deploy:staging": "npm run build && npm run docker:build && npm run docker:up",
    "deploy:production": "npm run test && npm run build && ./scripts/deploy.sh"
  },
  "keywords": [
    "nfc",
    "eventos", 
    "gamification",
    "networking",
    "ai",
    "analytics",
    "b2b",
    "b2c"
  ],
  "author": "Syntra Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
