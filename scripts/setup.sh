#!/bin/bash

# ============================================
# SYNTRA - SCRIPT DE CONFIGURACI√ìN SERVERLESS
# ============================================

set -e  # Salir si hay alg√∫n error

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para imprimir con colores
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Funci√≥n para verificar comandos
check_command() {
    if ! command -v $1 &> /dev/null; then
        print_error "$1 no est√° instalado. Por favor, inst√°lalo primero."
        return 1
    fi
    return 0
}

# Banner de bienvenida
echo -e "${BLUE}"
cat << "EOF"
   ____                  _                 
  / ___| _   _ _ __  _ __| |_ _ __ __ _ 
  \___ \| | | | '_ \| '__| __| '__/ _` |
   ___) | |_| | | | | |  | |_| | | (_| |
  |____/ \__, |_| |_|_|   \__|_|  \__,_|
         |___/                          
                                        
  üöÄ Configuraci√≥n Serverless de Syntra
  
EOF
echo -e "${NC}"

print_status "Iniciando configuraci√≥n serverless de Syntra..."

# Verificar prerrequisitos
print_status "Verificando prerrequisitos..."

check_command "node" || exit 1
check_command "npm" || exit 1
check_command "git" || exit 1

# Verificar versiones
NODE_VERSION=$(node --version | cut -d'v' -f2)
if [ "$(printf '%s\n' "18.0.0" "$NODE_VERSION" | sort -V | head -n1)" != "18.0.0" ]; then
    print_error "Node.js version $NODE_VERSION es menor que 18.0.0. Por favor, actualiza Node.js."
    exit 1
fi

print_success "Prerrequisitos verificados ‚úì"

# Configurar variables de entorno
print_status "Configurando variables de entorno..."

if [ ! -f .env ]; then
    cp env.example .env
    print_success "Archivo .env creado desde plantilla"
    print_warning "IMPORTANTE: Configura tu MongoDB Atlas URI en .env"
    echo -e "${BLUE}   1. Crea cuenta en https://mongodb.com/atlas${NC}"
    echo -e "${BLUE}   2. Crea cluster gratuito (M0)${NC}"
    echo -e "${BLUE}   3. Crea usuario de base de datos${NC}"
    echo -e "${BLUE}   4. Configura network access (0.0.0.0/0)${NC}"
    echo -e "${BLUE}   5. Copia connection string a MONGODB_URI en .env${NC}"
else
    print_warning "Archivo .env ya existe, no se sobrescribir√°"
fi

# Instalar dependencias
print_status "Instalando dependencias del proyecto..."

# Root dependencies
npm install

# Backend dependencies
print_status "Instalando dependencias del backend..."
cd backend && npm install && cd ..

# Frontend dependencies  
print_status "Instalando dependencias del frontend..."
cd frontend && npm install && cd ..

# Mobile dependencies
print_status "Instalando dependencias de la app m√≥vil..."
cd mobile && npm install && cd ..

print_success "Dependencias instaladas ‚úì"

# Instalar herramientas de desarrollo
print_status "Instalando herramientas de desarrollo..."

# Instalar Vercel CLI si no existe
if ! check_command "vercel"; then
    print_status "Instalando Vercel CLI..."
    npm install -g vercel
    print_success "Vercel CLI instalado ‚úì"
else
    print_success "Vercel CLI ya est√° disponible ‚úì"
fi

# Verificar conexi√≥n a MongoDB Atlas (si est√° configurado)
print_status "Verificando configuraci√≥n de MongoDB Atlas..."

if grep -q "mongodb+srv://" .env; then
    print_status "Probando conexi√≥n a MongoDB Atlas..."
    cd backend
    if npm run db:connect; then
        print_success "Conexi√≥n a MongoDB Atlas exitosa ‚úì"
    else
        print_warning "No se pudo conectar a MongoDB Atlas. Verifica tu MONGODB_URI en .env"
    fi
    cd ..
else
    print_warning "MongoDB Atlas URI no configurado en .env"
    print_status "Configura MONGODB_URI despu√©s de crear tu cluster en MongoDB Atlas"
fi

# Crear script de inicio r√°pido
cat > start.sh << 'EOF'
#!/bin/bash
echo "üöÄ Iniciando Syntra (Modo Serverless)..."
echo "‚è≥ Iniciando servicios de desarrollo..."
npm run dev &
echo "‚úÖ Syntra est√° corriendo!"
echo "üåê Frontend: http://localhost:3000"
echo "üì± Mobile: http://localhost:19006"  
echo "üîß API: http://localhost:3001"
echo "üçÉ Database: MongoDB Atlas (Cloud)"
EOF
chmod +x start.sh

print_success "Script de inicio r√°pido creado (./start.sh)"

# Mostrar resumen final
echo
echo -e "${GREEN}============================================"
echo -e "‚úÖ SYNTRA CONFIGURADO EXITOSAMENTE"
echo -e "============================================${NC}"
echo
echo -e "${BLUE}üåê URLs de desarrollo:${NC}"
echo "   Frontend:  http://localhost:3000"
echo "   Mobile:    http://localhost:19006"
echo "   API:       http://localhost:3001"
echo "   Database:  MongoDB Atlas (Cloud)"
echo
echo -e "${BLUE}‚òÅÔ∏è Infraestructura:${NC}"
echo "   Database:  MongoDB Atlas (Serverless)"
echo "   Hosting:   Vercel (Edge Functions)"
echo "   Storage:   Vercel Blob (Opcional)"
echo
echo -e "${BLUE}üöÄ Para iniciar desarrollo:${NC}"
echo "   npm run dev"
echo
echo -e "${BLUE}‚òÅÔ∏è Para deploy a producci√≥n:${NC}"
echo "   vercel --prod"
echo
echo -e "${BLUE}üì± Para la app m√≥vil:${NC}"
echo "   cd mobile && npm run ios     # iOS Simulator"
echo "   cd mobile && npm run android # Android Emulator"
echo "   cd mobile && npm run web     # Web Browser"
echo
echo -e "${BLUE}üß™ Para ejecutar tests:${NC}"
echo "   npm run test"
echo "   npm run test:coverage"
echo
echo -e "${BLUE}üìö Documentaci√≥n:${NC}"
echo "   README.md            # Gu√≠a completa"
echo "   docs/QUICK_START.md  # Inicio r√°pido"
echo "   docs/NFC_GUIDE.md    # Gu√≠a de NFC"
echo
echo -e "${YELLOW}‚ö†Ô∏è  Pr√≥ximos pasos:${NC}"
echo "   1. Configurar MongoDB Atlas URI en .env"
echo "   2. Ejecutar: npm run dev"
echo "   3. Abrir http://localhost:3000"
echo "   4. Para producci√≥n: vercel --prod"
echo
echo -e "${YELLOW}üí° Beneficios del stack serverless:${NC}"
echo "   ‚úÖ Escalabilidad autom√°tica"
echo "   ‚úÖ Costos optimizados (pay-as-you-scale)"
echo "   ‚úÖ Deploy global en segundos"
echo "   ‚úÖ Backup autom√°tico"
echo "   ‚úÖ Zero DevOps"
echo
echo -e "${GREEN}¬°Listo para crear experiencias de eventos inolvidables! üéâ${NC}"