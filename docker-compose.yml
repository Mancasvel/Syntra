version: '3.8'

services:
  # MongoDB Atlas - Cloud database (no local container needed)
  # Connection handled via MONGODB_URI environment variable

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: syntra-redis
    command: redis-server --appendonly yes --requirepass syntra_redis_pass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - syntra-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: syntra-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: ${MONGODB_URI}
      DATABASE_URL: ${MONGODB_URI}
      REDIS_URL: redis://:syntra_redis_pass@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      REVENUECAT_API_KEY: ${REVENUECAT_API_KEY}
      REVENUECAT_WEBHOOK_SECRET: ${REVENUECAT_WEBHOOK_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - redis
    networks:
      - syntra-network
    restart: unless-stopped
    command: npm run dev

  # Frontend Web Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: syntra-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_SOCKET_URL: http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - syntra-network
    restart: unless-stopped
    command: npm run dev

  # MQTT Broker para IoT/NFC devices
  mqtt:
    image: eclipse-mosquitto:2
    container_name: syntra-mqtt
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mqtt_data:/mosquitto/data
      - mqtt_logs:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - syntra-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: syntra-nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - syntra-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  mqtt_data:
    driver: local
  mqtt_logs:
    driver: local

networks:
  syntra-network:
    driver: bridge
